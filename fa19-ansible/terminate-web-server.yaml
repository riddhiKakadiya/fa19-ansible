---
### Playbook to terminate all instances with a given tag

- name: Playbook to terminate all instances with a given tag
  hosts: localhost
  gather_facts: True
  #Vars Passed as CLI argument
  vars:
    region: "{{ region }}" 
    key : "{{ key }}"
    value : "{{ value }}" 
  tasks:
    # Gather facts about any instance with the tag(Key, Value) passed
    - name: Gather EC2 facts
      ec2_instance_facts :
        filters:
          "{{ { 'tag:' ~ key: value, 'instance-state-name': ['running']}}}"
      register: ec2_metadata

    #Output the metadata of the EC2 instances
    - name: "Get security group attached to ec2 instance"
      debug: msg="{{ec2_metadata}}"


    #Terminating the EC2 instances and waiting for them to reach the desired state
    - name: Terminate instances that were previously launched
      ec2:
        state: 'absent'
        region: "{{ region }}"
        instance_ids: '{{ item.instance_id }}'
        wait: True
      loop : "{{ ec2_metadata.instances }}"

    - name : Remove security grp
      ec2_group:
        region: "{{ region }}"
        group_id: '{{ item.security_groups[0].group_id }}'
        state: absent
      loop: "{{ ec2_metadata.instances}}"
